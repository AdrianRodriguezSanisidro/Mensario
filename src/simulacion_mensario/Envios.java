/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simulacion_mensario;

import com.sun.glass.events.KeyEvent;
import es.xilon.semApi.*;
import es.xilon.semApi.beans.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import static simulacion_mensario.CrearGrupo.*;

/**
 *
 * @author adrys
 */
public class Envios extends javax.swing.JFrame {

    public static final String alfabetoRemitente = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz ";
    public static final String alfabetoGSM = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzÄÖÜÉØÅÆÑÇäöüàèìòùéøåæñ§ßΓ∆ΘΛΞΠΣΦΨΩ .,'?!_:;\"¿¡+-*/=\\<>()[]{}^~|@%#&¤$£€¥\n\r";
    public static ApiResponseBean apiResponse = null;
    public static ApiResponseBean apiResponseSaldo = null;
    public static SemApi semApi;

    /**
     * Creates new form Envios
     */
    public Envios() {
        initComponents();
        this.setLocationRelativeTo(null);//Centrar ventana
        //Inicio del hilo
        Hilo objHilo = new Hilo();
        objHilo.start();
        mostrarDatosTLicencias();
        mostrarGruposCombo();
        
        //Quitar autoscroll horizontal
        txtAreaMensaje.setLineWrap(true);
        txtAreaMensaje.setWrapStyleWord(true);
        txtAreaMoviles.setLineWrap(true);
        txtAreaMoviles.setWrapStyleWord(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        TPEscribirSms = new javax.swing.JTabbedPane();
        panelEnvios = new javax.swing.JPanel();
        lblNombreUsr = new javax.swing.JLabel();
        lblNombreRemitente = new javax.swing.JLabel();
        lblSaldoName = new javax.swing.JLabel();
        lblSaldo = new javax.swing.JLabel();
        txtNombreRemitente = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        IFDestinatario = new javax.swing.JInternalFrame();
        lblMoviles = new javax.swing.JLabel();
        jScrollPaneMoviles = new javax.swing.JScrollPane();
        txtAreaMoviles = new javax.swing.JTextArea();
        lblMovilesInsertadosName = new javax.swing.JLabel();
        btnAñadirMovil = new javax.swing.JButton();
        btnEliminarMoviles = new javax.swing.JButton();
        lblMovilesInsertados = new javax.swing.JLabel();
        IFMensaje = new javax.swing.JInternalFrame();
        lblTexto = new javax.swing.JLabel();
        jScrollPaneTexto = new javax.swing.JScrollPane();
        txtAreaMensaje = new javax.swing.JTextArea();
        lblNumMensajesName = new javax.swing.JLabel();
        lblNumCaracteresName = new javax.swing.JLabel();
        btnEliminarTexto = new javax.swing.JButton();
        lblNumMensajes = new javax.swing.JLabel();
        lblNumCaracteres = new javax.swing.JLabel();
        CheckEnvioProgramado = new javax.swing.JCheckBox();
        lblHoraEnvio = new javax.swing.JLabel();
        btnEnviar = new javax.swing.JButton();
        comboHoraEnvio = new javax.swing.JComboBox<>();
        comboMinEnvio = new javax.swing.JComboBox<>();
        comboSegEnvio = new javax.swing.JComboBox<>();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        panelLicencias = new javax.swing.JPanel();
        scrollTable = new javax.swing.JScrollPane();
        tablaLicencias = new javax.swing.JTable();
        lblLicencia = new javax.swing.JLabel();
        txtLicencia = new javax.swing.JTextField();
        lblUsuario = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblClave = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        btnAñadirLicencia = new javax.swing.JButton();
        btnBuscarLicencia = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnUtilizarLicencia = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        panelContactos = new javax.swing.JPanel();
        comboElegirGrupo = new javax.swing.JComboBox<>();
        lblNombreTabla = new javax.swing.JLabel();
        scrollContactos = new javax.swing.JScrollPane();
        tablaContactos = new javax.swing.JTable();
        btnBorrarGrupo = new javax.swing.JButton();
        btnCrearGrupo = new javax.swing.JButton();
        btnAñadirAlGrupo = new javax.swing.JButton();
        IFContactos = new javax.swing.JInternalFrame();
        btnAñadirContacto = new javax.swing.JButton();
        btnEliminarContacto = new javax.swing.JButton();
        comboPais = new javax.swing.JComboBox<>();
        lblPais = new javax.swing.JLabel();
        txtMovilContacto = new javax.swing.JTextField();
        lblMovil = new javax.swing.JLabel();
        txtNombreContacto = new javax.swing.JTextField();
        lblNombreContacto = new javax.swing.JLabel();
        btnLimpiarNombreC = new javax.swing.JButton();
        btnLimpiarMovilC = new javax.swing.JButton();
        comboAñadirAlGrupo = new javax.swing.JComboBox<>();
        jSeparator2 = new javax.swing.JSeparator();
        btnEscribirContacto = new javax.swing.JButton();
        btnEscribirGrupo = new javax.swing.JButton();
        btnOrdenarMovilA = new javax.swing.JButton();
        btnOrdenarMovilD = new javax.swing.JButton();
        btnOrdenarNombreA = new javax.swing.JButton();
        btnOrdenarNombreD = new javax.swing.JButton();
        btnOrdenarPaisA = new javax.swing.JButton();
        btnOrdenarPaisD = new javax.swing.JButton();
        btnDesordenar = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mensario 2");
        setBackground(new java.awt.Color(255, 255, 255));
        setSize(new java.awt.Dimension(600, 720));

        TPEscribirSms.setBackground(new java.awt.Color(255, 255, 255));
        TPEscribirSms.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TPEscribirSms.setOpaque(true);
        TPEscribirSms.setPreferredSize(new java.awt.Dimension(710, 777));

        panelEnvios.setPreferredSize(new java.awt.Dimension(705, 777));

        lblNombreUsr.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNombreUsr.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Esta utilizando la licencia:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 11))); // NOI18N

        lblNombreRemitente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNombreRemitente.setText("Nombre de remitente:");

        lblSaldoName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblSaldoName.setText("Saldo disponible:");

        txtNombreRemitente.setToolTipText("");

        IFDestinatario.setTitle("Destianatario");
        IFDestinatario.setVisible(true);

        lblMoviles.setText("Móviles:");

        txtAreaMoviles.setColumns(20);
        txtAreaMoviles.setRows(5);
        jScrollPaneMoviles.setViewportView(txtAreaMoviles);

        lblMovilesInsertadosName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblMovilesInsertadosName.setText("Número de moviles insertados:");

        btnAñadirMovil.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_plus.jpg")); // NOI18N
        btnAñadirMovil.setText("Añadir movil");
        btnAñadirMovil.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAñadirMovil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAñadirMovilMouseClicked(evt);
            }
        });

        btnEliminarMoviles.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_limpiar.jpg")); // NOI18N
        btnEliminarMoviles.setText("Limpiar texto");
        btnEliminarMoviles.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminarMoviles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMovilesMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout IFDestinatarioLayout = new javax.swing.GroupLayout(IFDestinatario.getContentPane());
        IFDestinatario.getContentPane().setLayout(IFDestinatarioLayout);
        IFDestinatarioLayout.setHorizontalGroup(
            IFDestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneMoviles)
            .addGroup(IFDestinatarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(IFDestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(IFDestinatarioLayout.createSequentialGroup()
                        .addComponent(lblMovilesInsertadosName)
                        .addGap(5, 5, 5)
                        .addComponent(lblMovilesInsertados, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAñadirMovil, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminarMoviles, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))
                    .addGroup(IFDestinatarioLayout.createSequentialGroup()
                        .addComponent(lblMoviles)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        IFDestinatarioLayout.setVerticalGroup(
            IFDestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IFDestinatarioLayout.createSequentialGroup()
                .addComponent(lblMoviles)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneMoviles, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(IFDestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMovilesInsertadosName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMovilesInsertados, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(IFDestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAñadirMovil)
                        .addComponent(btnEliminarMoviles)))
                .addGap(5, 5, 5))
        );

        IFMensaje.setTitle("Mensaje");
        IFMensaje.setVisible(true);

        lblTexto.setText("Texto:");

        txtAreaMensaje.setColumns(20);
        txtAreaMensaje.setRows(5);
        jScrollPaneTexto.setViewportView(txtAreaMensaje);

        lblNumMensajesName.setText("Número de mensajes:");

        lblNumCaracteresName.setText("Número de caracteres: ");

        btnEliminarTexto.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_limpiar.jpg")); // NOI18N
        btnEliminarTexto.setText("Limpiar texto");
        btnEliminarTexto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminarTexto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarTextoMouseClicked(evt);
            }
        });

        lblNumMensajes.setText("1");

        javax.swing.GroupLayout IFMensajeLayout = new javax.swing.GroupLayout(IFMensaje.getContentPane());
        IFMensaje.getContentPane().setLayout(IFMensajeLayout);
        IFMensajeLayout.setHorizontalGroup(
            IFMensajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneTexto)
            .addGroup(IFMensajeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(IFMensajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(IFMensajeLayout.createSequentialGroup()
                        .addComponent(lblTexto)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(IFMensajeLayout.createSequentialGroup()
                        .addComponent(lblNumMensajesName)
                        .addGap(5, 5, 5)
                        .addComponent(lblNumMensajes, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblNumCaracteresName)
                        .addGap(0, 0, 0)
                        .addComponent(lblNumCaracteres, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminarTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))))
        );
        IFMensajeLayout.setVerticalGroup(
            IFMensajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IFMensajeLayout.createSequentialGroup()
                .addComponent(lblTexto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(IFMensajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblNumCaracteres, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarTexto)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, IFMensajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNumMensajes, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblNumMensajesName)
                        .addComponent(lblNumCaracteresName)))
                .addGap(5, 5, 5))
        );

        CheckEnvioProgramado.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        CheckEnvioProgramado.setText("Envio programado");

        lblHoraEnvio.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblHoraEnvio.setText("Hora de envio:");

        btnEnviar.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\enviar.png")); // NOI18N
        btnEnviar.setText("Enviar");
        btnEnviar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEnviar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEnviarMouseClicked(evt);
            }
        });

        comboHoraEnvio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        comboMinEnvio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        comboSegEnvio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        jCalendar1.setDecorationBordersVisible(true);

        javax.swing.GroupLayout panelEnviosLayout = new javax.swing.GroupLayout(panelEnvios);
        panelEnvios.setLayout(panelEnviosLayout);
        panelEnviosLayout.setHorizontalGroup(
            panelEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblNombreUsr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addGroup(panelEnviosLayout.createSequentialGroup()
                .addComponent(lblNombreRemitente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombreRemitente, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblSaldoName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
            .addGroup(panelEnviosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CheckEnvioProgramado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblHoraEnvio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(comboHoraEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboMinEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboSegEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEnviosLayout.createSequentialGroup()
                .addGroup(panelEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(IFDestinatario, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IFMensaje))
                .addContainerGap())
        );
        panelEnviosLayout.setVerticalGroup(
            panelEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEnviosLayout.createSequentialGroup()
                .addComponent(lblNombreUsr, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNombreRemitente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNombreRemitente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblSaldoName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelEnviosLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(lblSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IFDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IFMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panelEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEnviosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEnviar)
                            .addComponent(comboSegEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboMinEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboHoraEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHoraEnvio))
                        .addGap(40, 40, 40))
                    .addGroup(panelEnviosLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(CheckEnvioProgramado))
                    .addGroup(panelEnviosLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(419, 419, 419))
        );

        TPEscribirSms.addTab("Enviar", new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_envios.jpg"), panelEnvios); // NOI18N

        panelLicencias.setPreferredSize(new java.awt.Dimension(705, 777));

        tablaLicencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número de serie", "Usuario", "Clave", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaLicencias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaLicenciasMouseClicked(evt);
            }
        });
        scrollTable.setViewportView(tablaLicencias);

        lblLicencia.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblLicencia.setText("Licencia:");

        lblUsuario.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblUsuario.setText("Usuario:");

        lblNombre.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNombre.setText("Nombre:");

        lblClave.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblClave.setText("Clave:");

        btnAñadirLicencia.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_plus.jpg")); // NOI18N
        btnAñadirLicencia.setText("Añadir licencia");
        btnAñadirLicencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAñadirLicenciaMouseClicked(evt);
            }
        });

        btnBuscarLicencia.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_lupa.jpg")); // NOI18N
        btnBuscarLicencia.setText("Buscar");
        btnBuscarLicencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarLicenciaMouseClicked(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_limpiar.jpg")); // NOI18N
        btnLimpiar.setText("Limpiar campos");
        btnLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseClicked(evt);
            }
        });

        btnUtilizarLicencia.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_check.jpg")); // NOI18N
        btnUtilizarLicencia.setText("Utilizar licencia");
        btnUtilizarLicencia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUtilizarLicencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUtilizarLicenciaMouseClicked(evt);
            }
        });

        btnEliminar.setForeground(new java.awt.Color(255, 0, 0));
        btnEliminar.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\papelera.jpg")); // NOI18N
        btnEliminar.setText("Eliminar licencia");
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelLicenciasLayout = new javax.swing.GroupLayout(panelLicencias);
        panelLicencias.setLayout(panelLicenciasLayout);
        panelLicenciasLayout.setHorizontalGroup(
            panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLicenciasLayout.createSequentialGroup()
                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelLicenciasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator3))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelLicenciasLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(scrollTable))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelLicenciasLayout.createSequentialGroup()
                        .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLicenciasLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtLicencia)
                                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelLicenciasLayout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnUtilizarLicencia, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(btnAñadirLicencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLicenciasLayout.createSequentialGroup()
                                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblClave, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtClave)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLicenciasLayout.createSequentialGroup()
                                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnBuscarLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(96, 96, 96)))))
                .addGap(5, 5, 5))
        );
        panelLicenciasLayout.setVerticalGroup(
            panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLicenciasLayout.createSequentialGroup()
                .addComponent(scrollTable, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(panelLicenciasLayout.createSequentialGroup()
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(23, 23, 23))
                        .addGroup(panelLicenciasLayout.createSequentialGroup()
                            .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(36, 36, 36)
                            .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelLicenciasLayout.createSequentialGroup()
                        .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblClave, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(36, 36, 36)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnUtilizarLicencia, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                    .addComponent(btnBuscarLicencia, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAñadirLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        TPEscribirSms.addTab("Licencias", new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_licencia.jpg"), panelLicencias); // NOI18N

        panelContactos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelContactos.setPreferredSize(new java.awt.Dimension(705, 777));

        comboElegirGrupo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos" }));

        lblNombreTabla.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNombreTabla.setText("Grupo");

        scrollContactos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tablaContactos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movil", "Nombre", "Pais"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaContactos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaContactosMouseClicked(evt);
            }
        });
        scrollContactos.setViewportView(tablaContactos);

        btnBorrarGrupo.setForeground(new java.awt.Color(204, 0, 0));
        btnBorrarGrupo.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\papelera.jpg")); // NOI18N
        btnBorrarGrupo.setText("Eliminar grupo");
        btnBorrarGrupo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBorrarGrupoMouseClicked(evt);
            }
        });

        btnCrearGrupo.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_plus.jpg")); // NOI18N
        btnCrearGrupo.setText("Crear grupo");
        btnCrearGrupo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCrearGrupoMouseClicked(evt);
            }
        });

        btnAñadirAlGrupo.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\add_user.jpg")); // NOI18N
        btnAñadirAlGrupo.setText("Añadir contacto al grupo");

        IFContactos.setTitle("Contacto");
        IFContactos.setVisible(true);

        btnAñadirContacto.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\add_user.jpg")); // NOI18N
        btnAñadirContacto.setText("Añadir contacto");
        btnAñadirContacto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAñadirContactoMouseClicked(evt);
            }
        });

        btnEliminarContacto.setForeground(new java.awt.Color(204, 0, 0));
        btnEliminarContacto.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\papelera.jpg")); // NOI18N
        btnEliminarContacto.setText("Eliminar contacto");
        btnEliminarContacto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarContactoMouseClicked(evt);
            }
        });

        comboPais.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alemania", "Andorra", "Austria", "Bélgica", "Bosnia", "Bulgaria", "Chipre", "Croacia", "Dinamarca", "Eslovaquia", "Eslovenia", "España", "Estonia", "Finlandia", "Francia", "Grecia", "Hungría ", "Irlanda", "Islandia", "Italia", "Letonia", "Lituania", "Luxemburgo", "Malta", "Montenegro", "Noruega", "Países Bajos", "Polonia", "Portugal", "Reino Unido", "República Checa", "Rumanía", "Rusia", "Serbia-Kosovo", "Suecia", "Suiza", "Turquía", "Ucrania" }));

        lblPais.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPais.setText("País:");

        txtMovilContacto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMovilContactoKeyTyped(evt);
            }
        });

        lblMovil.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblMovil.setText("Móvil:");

        lblNombreContacto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNombreContacto.setText("Nombre:");

        btnLimpiarNombreC.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_limpiar.jpg")); // NOI18N
        btnLimpiarNombreC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarNombreCMouseClicked(evt);
            }
        });

        btnLimpiarMovilC.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_limpiar.jpg")); // NOI18N
        btnLimpiarMovilC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarMovilCMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout IFContactosLayout = new javax.swing.GroupLayout(IFContactos.getContentPane());
        IFContactos.getContentPane().setLayout(IFContactosLayout);
        IFContactosLayout.setHorizontalGroup(
            IFContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, IFContactosLayout.createSequentialGroup()
                .addComponent(lblNombreContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombreContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(btnLimpiarNombreC, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMovil, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMovilContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(btnLimpiarMovilC, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPais)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboPais, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(IFContactosLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnAñadirContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(211, 211, 211)
                .addComponent(btnEliminarContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        IFContactosLayout.setVerticalGroup(
            IFContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IFContactosLayout.createSequentialGroup()
                .addGroup(IFContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLimpiarMovilC)
                    .addComponent(btnLimpiarNombreC)
                    .addGroup(IFContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNombreContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNombreContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblMovil, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMovilContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblPais, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(IFContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminarContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAñadirContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        btnEscribirContacto.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_envios.jpg")); // NOI18N
        btnEscribirContacto.setText("Escribir al contacto");
        btnEscribirContacto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEscribirContactoMouseClicked(evt);
            }
        });

        btnEscribirGrupo.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_envios.jpg")); // NOI18N
        btnEscribirGrupo.setText("Escribir a todo el grupo");

        btnOrdenarMovilA.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\orderDown.jpg")); // NOI18N
        btnOrdenarMovilA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOrdenarMovilAMouseClicked(evt);
            }
        });

        btnOrdenarMovilD.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\orderUp.jpg")); // NOI18N
        btnOrdenarMovilD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOrdenarMovilDMouseClicked(evt);
            }
        });

        btnOrdenarNombreA.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\orderDown.jpg")); // NOI18N
        btnOrdenarNombreA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOrdenarNombreAMouseClicked(evt);
            }
        });

        btnOrdenarNombreD.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\orderUp.jpg")); // NOI18N
        btnOrdenarNombreD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOrdenarNombreDMouseClicked(evt);
            }
        });

        btnOrdenarPaisA.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\orderDown.jpg")); // NOI18N
        btnOrdenarPaisA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOrdenarPaisAMouseClicked(evt);
            }
        });

        btnOrdenarPaisD.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\orderUp.jpg")); // NOI18N
        btnOrdenarPaisD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOrdenarPaisDMouseClicked(evt);
            }
        });

        btnDesordenar.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_check.jpg")); // NOI18N
        btnDesordenar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDesordenarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelContactosLayout = new javax.swing.GroupLayout(panelContactos);
        panelContactos.setLayout(panelContactosLayout);
        panelContactosLayout.setHorizontalGroup(
            panelContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContactosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelContactosLayout.createSequentialGroup()
                        .addComponent(btnEscribirContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEscribirGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelContactosLayout.createSequentialGroup()
                        .addComponent(IFContactos)
                        .addContainerGap())
                    .addGroup(panelContactosLayout.createSequentialGroup()
                        .addGroup(panelContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelContactosLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(comboAñadirAlGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAñadirAlGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(scrollContactos))
                        .addContainerGap())
                    .addGroup(panelContactosLayout.createSequentialGroup()
                        .addGroup(panelContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelContactosLayout.createSequentialGroup()
                                .addGap(291, 291, 291)
                                .addComponent(btnCrearGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(90, 90, 90)
                                .addComponent(btnBorrarGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelContactosLayout.createSequentialGroup()
                                .addComponent(lblNombreTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboElegirGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDesordenar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(panelContactosLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(btnOrdenarMovilA, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnOrdenarMovilD, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(174, 174, 174)
                .addComponent(btnOrdenarNombreA, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnOrdenarNombreD, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOrdenarPaisA, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnOrdenarPaisD, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );
        panelContactosLayout.setVerticalGroup(
            panelContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContactosLayout.createSequentialGroup()
                .addGroup(panelContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(panelContactosLayout.createSequentialGroup()
                            .addGroup(panelContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnDesordenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(panelContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(comboElegirGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNombreTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(7, 7, 7))
                        .addComponent(btnCrearGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBorrarGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnOrdenarMovilA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOrdenarMovilD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOrdenarNombreA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOrdenarNombreD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOrdenarPaisA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOrdenarPaisD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollContactos, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(IFContactos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAñadirAlGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboAñadirAlGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEscribirContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEscribirGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        TPEscribirSms.addTab("Contactos", new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\usuarios.jpg"), panelContactos); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TPEscribirSms, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TPEscribirSms, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        TPEscribirSms.getAccessibleContext().setAccessibleName("Envios");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarMovilesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMovilesMouseClicked
        txtAreaMoviles.setText("");
    }//GEN-LAST:event_btnEliminarMovilesMouseClicked

    private void btnEliminarTextoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarTextoMouseClicked
        txtAreaMensaje.setText("");
    }//GEN-LAST:event_btnEliminarTextoMouseClicked

    private void btnAñadirMovilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAñadirMovilMouseClicked
        txtAreaMoviles.setText("678111234," + txtAreaMoviles.getText());
    }//GEN-LAST:event_btnAñadirMovilMouseClicked

    private void btnEnviarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEnviarMouseClicked
        if ((comprobarGSM(cambiarCaracteres(txtAreaMensaje.getText())) == true) && (comprobarRemitente(txtNombreRemitente.getText()) == true)) {
            try {
                //Separar el contenido para comprobar los telefonos de forma individual
                String[] contador = txtAreaMoviles.getText().split(",");
                //Set recipients
                ArrayList<ApiRecipientBean> recipients = new ArrayList<ApiRecipientBean>();
                for (int i = 0; i < Integer.parseInt(Hilo.comprobarTelefonos()); i++) {
                    ApiRecipientBean recipient = new ApiRecipientBean();
                    recipient.setCode("34");
                    recipient.setPhone(contador[i]);
                    recipients.add(recipient);
                }
                //Set message data
                ArrayList<ApiMessageBean> sendings = new ArrayList<ApiMessageBean>();
                ApiMessageBean message = new ApiMessageBean();
                message.setRecipients(recipients);
                message.setSender(txtNombreRemitente.getText());
                message.setText(cambiarCaracteres(txtAreaMensaje.getText()));
                message.setDate(conseguirFecha());
                sendings.add(message);

                apiResponse = semApi.executeSending(sendings);
                refrescarSaldo();
                if (apiResponse.getResult().equals("OK")) {

                    JOptionPane.showMessageDialog(this, "Id de petición: " + apiResponse.getRequest() + "\n" + "Id de mensaje: " + apiResponse.getIds().get(0), "Envío", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    System.err.println(apiResponse.getResult());
                }
            } catch (Exception ex) {
                Logger.getLogger(Envios.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Hay caracteres invalidos en el mensaje o el remitente,los caracteres validos son:\nPara el remitente: " + alfabetoRemitente + "\nPara el mensaje: " + alfabetoGSM);
        }
    }//GEN-LAST:event_btnEnviarMouseClicked

    private void btnAñadirLicenciaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAñadirLicenciaMouseClicked
        añadirLicencia();
    }//GEN-LAST:event_btnAñadirLicenciaMouseClicked

    private void tablaLicenciasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaLicenciasMouseClicked
        seleccionarLineaLicencias();
    }//GEN-LAST:event_tablaLicenciasMouseClicked

    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked
        int yesNoButton = JOptionPane.YES_NO_OPTION;
        int returnVal = JOptionPane.showConfirmDialog(null,
                "La licencia sera borrada de forma permanente,¿estas seguro de eliminarla?", "¡CUIDADO!", yesNoButton);
        if (returnVal == JOptionPane.YES_OPTION) {
            eliminarLicencia();
            limpiarTxt();
        }
    }//GEN-LAST:event_btnEliminarMouseClicked

    private void btnLimpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseClicked
        limpiarTxt();
    }//GEN-LAST:event_btnLimpiarMouseClicked

    private void btnBuscarLicenciaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarLicenciaMouseClicked
        String nombre = txtNombre.getText();
        for (int i = 0; i < tablaLicencias.getRowCount(); i++) {
            if (nombre.equals(tablaLicencias.getValueAt(i, 3))) {
                txtLicencia.setText((String) tablaLicencias.getValueAt(i, 0));
                txtUsuario.setText((String) tablaLicencias.getValueAt(i, 1));
                txtClave.setText((String) tablaLicencias.getValueAt(i, 2));
                txtNombre.setText((String) tablaLicencias.getValueAt(i, 3));
            }
        }
    }//GEN-LAST:event_btnBuscarLicenciaMouseClicked

    private void btnUtilizarLicenciaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUtilizarLicenciaMouseClicked
        try {
            semApi = new SemApi(txtLicencia.getText(), txtUsuario.getText(), txtClave.getText(), "es.servicios.mensario.com", 443);
            apiResponse = semApi.executeSynchronization();
            if (apiResponse.getResult().equals("OK")) {
                semApi.setTimezone("Europe/Madrid");
                lblNombreUsr.setText(txtLicencia.getText());
                refrescarSaldo();
                mostrarDatosTContactos(adaptarNombreG(comboElegirGrupo.getSelectedItem().toString()), lblNombreUsr.getText());
                JOptionPane.showMessageDialog(null, "Conectado a la licencia '" + txtLicencia.getText() + "' de " + txtNombre.getText());
                limpiarTxt();
                CrearGrupo.mostrarGruposCombo();
            } else {
                JOptionPane.showMessageDialog(null, "La licencia no existe");
            }
        } catch (Exception ex) {
            Logger.getLogger(Envios.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnUtilizarLicenciaMouseClicked

    private void btnAñadirContactoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAñadirContactoMouseClicked
        if ((txtMovilContacto.getText().startsWith("6") || txtMovilContacto.getText().startsWith("7")) && txtMovilContacto.getText().length() == 9) {  
            añadirContacto(lblNombreUsr.getText());
            } else {
                JOptionPane.showMessageDialog(null, "El telefono es incorrecto");
            }
    }//GEN-LAST:event_btnAñadirContactoMouseClicked

    private void btnLimpiarNombreCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarNombreCMouseClicked
        txtNombreContacto.setText("");
    }//GEN-LAST:event_btnLimpiarNombreCMouseClicked

    private void btnLimpiarMovilCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMovilCMouseClicked
        txtMovilContacto.setText("");
    }//GEN-LAST:event_btnLimpiarMovilCMouseClicked

    private void btnOrdenarMovilAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOrdenarMovilAMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) tablaContactos.getModel();
            for (int i = 0; i < tablaContactos.getRowCount(); i++) {
                modelo.removeRow(i);
                i -= 1;
            }
        mostrarDatosTContactosOrdenados("movilc","DESC",adaptarNombreG(comboElegirGrupo.getSelectedItem().toString()), lblNombreUsr.getText());
    }//GEN-LAST:event_btnOrdenarMovilAMouseClicked

    private void btnOrdenarMovilDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOrdenarMovilDMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) tablaContactos.getModel();
            for (int i = 0; i < tablaContactos.getRowCount(); i++) {
                modelo.removeRow(i);
                i -= 1;
            }
        mostrarDatosTContactosOrdenados("movilc","ASC",adaptarNombreG(comboElegirGrupo.getSelectedItem().toString()), lblNombreUsr.getText());
    }//GEN-LAST:event_btnOrdenarMovilDMouseClicked

    private void btnOrdenarNombreAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOrdenarNombreAMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) tablaContactos.getModel();
            for (int i = 0; i < tablaContactos.getRowCount(); i++) {
                modelo.removeRow(i);
                i -= 1;
            }
        mostrarDatosTContactosOrdenados("nombrec","DESC",adaptarNombreG(comboElegirGrupo.getSelectedItem().toString()), lblNombreUsr.getText());
    }//GEN-LAST:event_btnOrdenarNombreAMouseClicked

    private void btnOrdenarPaisAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOrdenarPaisAMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) tablaContactos.getModel();
            for (int i = 0; i < tablaContactos.getRowCount(); i++) {
                modelo.removeRow(i);
                i -= 1;
            }
        mostrarDatosTContactosOrdenados("paisc","DESC",adaptarNombreG(comboElegirGrupo.getSelectedItem().toString()), lblNombreUsr.getText());
    }//GEN-LAST:event_btnOrdenarPaisAMouseClicked

    private void btnOrdenarNombreDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOrdenarNombreDMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) tablaContactos.getModel();
            for (int i = 0; i < tablaContactos.getRowCount(); i++) {
                modelo.removeRow(i);
                i -= 1;
            }
        mostrarDatosTContactosOrdenados("nombrec","ASC",adaptarNombreG(comboElegirGrupo.getSelectedItem().toString()), lblNombreUsr.getText());
    }//GEN-LAST:event_btnOrdenarNombreDMouseClicked

    private void btnOrdenarPaisDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOrdenarPaisDMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) tablaContactos.getModel();
            for (int i = 0; i < tablaContactos.getRowCount(); i++) {
                modelo.removeRow(i);
                i -= 1;
            }
        mostrarDatosTContactosOrdenados("paisc","ASC",adaptarNombreG(comboElegirGrupo.getSelectedItem().toString()), lblNombreUsr.getText());
    }//GEN-LAST:event_btnOrdenarPaisDMouseClicked

    private void btnDesordenarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDesordenarMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) tablaContactos.getModel();
            for (int i = 0; i < tablaContactos.getRowCount(); i++) {
                modelo.removeRow(i);
                i -= 1;
            }
        mostrarDatosTContactos(adaptarNombreG(comboElegirGrupo.getSelectedItem().toString()), lblNombreUsr.getText());
    }//GEN-LAST:event_btnDesordenarMouseClicked

    private void tablaContactosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaContactosMouseClicked
        seleccionarLineaContactos();
    }//GEN-LAST:event_tablaContactosMouseClicked

    private void btnEliminarContactoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarContactoMouseClicked
        int yesNoButton = JOptionPane.YES_NO_OPTION;
        int returnVal = JOptionPane.showConfirmDialog(null,
                "El contacto sera borrado de forma permanente,¿estas seguro de eliminarlo?", "¡CUIDADO!", yesNoButton);
        if (returnVal == JOptionPane.YES_OPTION) {
            eliminarContacto();
            txtNombreContacto.setText("");
            txtMovilContacto.setText("");
        }
    }//GEN-LAST:event_btnEliminarContactoMouseClicked

    private void txtMovilContactoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMovilContactoKeyTyped
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_txtMovilContactoKeyTyped

    private void btnEscribirContactoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEscribirContactoMouseClicked
        txtAreaMoviles.setText(juntarMovilPrefijo(txtMovilContacto.getText())+txtAreaMoviles.getText());
    }//GEN-LAST:event_btnEscribirContactoMouseClicked

    private void btnCrearGrupoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearGrupoMouseClicked
        CrearGrupo objCrearG=new CrearGrupo();
        objCrearG.setVisible(true);
    }//GEN-LAST:event_btnCrearGrupoMouseClicked

    private void btnBorrarGrupoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBorrarGrupoMouseClicked
        borrarGrupo();
        mostrarGruposCombo();
    }//GEN-LAST:event_btnBorrarGrupoMouseClicked
    /*
    *
    *
    *Inicio de metodos para el programa
    *
    *
     */
    
    public String conseguirFecha() {
        String fechaDefinitiva = "";
        if (CheckEnvioProgramado.isSelected() == true) {
            String fechaString = "" + jCalendar1.getDate();
            System.out.println("----------" + fechaString + "----------");
            String[] fecha = fechaString.split(" ");
            fecha[1] = convertirMes(fecha[1]);
            fechaDefinitiva = (fecha[5] + fecha[1] + fecha[2]
                    + comboHoraEnvio.getItemAt(comboHoraEnvio.getSelectedIndex())
                    + comboMinEnvio.getItemAt(comboMinEnvio.getSelectedIndex())
                    + comboSegEnvio.getItemAt(comboSegEnvio.getSelectedIndex()));
        } else {
            fechaDefinitiva = "00000000000000";
        }
        return fechaDefinitiva;
    }

    public String convertirMes(String fecha1) {
        String mesAux = fecha1;
        switch (mesAux) {
            case "Jan":
                fecha1 = "01";
                break;
            case "Feb":
                fecha1 = "02";
                break;
            case "Mar":
                fecha1 = "03";
                break;
            case "Apr":
                fecha1 = "04";
                break;
            case "May":
                fecha1 = "05";
                break;
            case "Jun":
                fecha1 = "06";
                break;
            case "Jul":
                fecha1 = "07";
                break;
            case "Aug":
                fecha1 = "08";
                break;
            case "Sep":
                fecha1 = "09";
                break;
            case "Oct":
                fecha1 = "10";
                break;
            case "Nov":
                fecha1 = "11";
                break;
            case "Dec":
                fecha1 = "12";
                break;
        }
        return fecha1;
    }

    public static void comprobarCheck() {
        if (CheckEnvioProgramado.isSelected() == false) {
            comboHoraEnvio.setEnabled(false);
            comboMinEnvio.setEnabled(false);
            comboSegEnvio.setEnabled(false);
            jCalendar1.setEnabled(false);
        } else {
            comboHoraEnvio.setEnabled(true);
            comboMinEnvio.setEnabled(true);
            comboSegEnvio.setEnabled(true);
            jCalendar1.setEnabled(true);
        }
    }

    public static void refrescarSaldo() {
        try {
            apiResponseSaldo = semApi.executeBalanceEnquiry();
            lblSaldo.setText("" + apiResponseSaldo.getQuantity());
        } catch (Exception ex) {
            Logger.getLogger(Hilo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static void crearTablaLicencias() {
        try {
            Connection c = null;
            Statement stmt = null;
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:jmensario.db");
            stmt = c.createStatement();
            String sql = "CREATE TABLE licencias "
                    + "(nlicencia TEXT PRIMARY KEY NOT NULL,"
                    + "usuario TEXT UNIQUE NOT NULL,"
                    + "clave TEXT UNIQUE NOT NULL, "
                    + "nombre TEXT UNIQUE NOT NULL)";
            stmt.executeUpdate(sql);
            stmt.close();
            c.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Envios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Envios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static void crearTablaContactos() {
        try {
            Connection c = null;
            Statement stmt = null;
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:jmensario.db");
            stmt = c.createStatement();
            String sql = "CREATE TABLE contactos "
                    + "(movilc TEXT PRIMARY KEY NOT NULL,"
                    + "nombrec TEXT NOT NULL,"
                    + "paisc TEXT NOT NULL,"
                    + "licenciac TEXT NOT NULL)";
            stmt.executeUpdate(sql);
            stmt.close();
            c.close();
        } catch (SQLException ex) {
            Logger.getLogger(Envios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Envios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static void mostrarDatosTLicencias() {
        Connection c = null;
        Statement stmt = null;
        DefaultTableModel modelo = (DefaultTableModel) tablaLicencias.getModel();
        try {
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:jmensario.db");
            c.setAutoCommit(false);

            stmt = c.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM licencias;");
            while (rs.next()) {
                Object[] linea = new Object[4];
                linea[0] = rs.getString("nlicencia");
                linea[1] = rs.getString("usuario");
                linea[2] = rs.getString("clave");
                linea[3] = rs.getString("nombre");
                modelo.addRow(linea);
                tablaLicencias.setModel(modelo);
            }
            rs.close();
            stmt.close();
            c.close();
        } catch (Exception e) {
            System.err.println(e.getClass().getName() + ": " + e.getMessage());
            System.exit(0);
        }
    }

    public static void mostrarDatosTContactos(String nombreGrupo, String nLicencia) {
        if (!"".equals(nLicencia)) {
            Connection c = null;
            Statement stmt = null;
            DefaultTableModel modelo = (DefaultTableModel) tablaContactos.getModel();
            try {
                Class.forName("org.sqlite.JDBC");
                c = DriverManager.getConnection("jdbc:sqlite:jmensario.db");
                c.setAutoCommit(false);
                stmt = c.createStatement();

                ResultSet rs = stmt.executeQuery(consultarSegunGrupo(1, "", "", nombreGrupo, nLicencia));
                while (rs.next()) {
                    Object[] linea = new Object[3];
                    linea[0] = rs.getString("movilc");
                    linea[1] = rs.getString("nombrec");
                    linea[2] = rs.getString("paisc");
                    modelo.addRow(linea);
                    tablaContactos.setModel(modelo);
                }
                rs.close();
                stmt.close();
                c.close();

            } catch (Exception ex) {
                Logger.getLogger(Envios.class.getName()).log(Level.SEVERE, null, ex);
                System.exit(0);
            }
        }
    }

    public static void mostrarDatosTContactosOrdenados(String campo, String orden, String nombreGrupo, String nLicencia) {
        if (!"".equals(nLicencia)) {
            Connection c = null;
            Statement stmt = null;
            DefaultTableModel modelo = (DefaultTableModel) tablaContactos.getModel();
            try {
                Class.forName("org.sqlite.JDBC");
                c = DriverManager.getConnection("jdbc:sqlite:jmensario.db");
                c.setAutoCommit(false);
                stmt = c.createStatement();

                ResultSet rs = stmt.executeQuery(consultarSegunGrupo(2, campo, orden, nombreGrupo, nLicencia));
                while (rs.next()) {
                    Object[] linea = new Object[3];
                    linea[0] = rs.getString("movilc");
                    linea[1] = rs.getString("nombrec");
                    linea[2] = rs.getString("paisc");
                    modelo.addRow(linea);
                    tablaContactos.setModel(modelo);
                }
                rs.close();
                stmt.close();
                c.close();

            } catch (Exception ex) {
                Logger.getLogger(Envios.class.getName()).log(Level.SEVERE, null, ex);
                System.exit(0);
            }
        }
    }

    public static String consultarSegunGrupo(int tipo, String campo, String orden, String nombreGrupo, String nLicencia) {
        if (tipo == 1) {
            if (nombreGrupo.equals("todos")) {
                return "SELECT * FROM contactos WHERE licenciac='" + nLicencia + "';";
            } else {
                return "SELECT * FROM contactos WHERE licenciac='" + nLicencia + "' and movilc=(SELECT movilc FROM " + nombreGrupo + ");";
            }
        } else{
            if(nombreGrupo.equals("todos")){
                return "SELECT * FROM contactos WHERE licenciac='" + nLicencia + "' ORDER BY "+campo+" "+orden+";";
            }else{
                return "SELECT * FROM contactos WHERE licenciac='" + nLicencia + "' and movilc=(SELECT movilc FROM " + nombreGrupo + ") ORDER BY "+campo+" "+orden+";";
            }
    }
    }

    public static void añadirLicencia() {
        String nlicencia = txtLicencia.getText();
        String usuario = txtUsuario.getText();
        String clave = txtClave.getText();
        String nombre = txtNombre.getText();

        Connection c = null;
        Statement stmt = null;
        try {
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:jmensario.db");
            c.setAutoCommit(false);

            stmt = c.createStatement();
            String sql = "INSERT INTO licencias VALUES (" + "'" + nlicencia + "'," + "'" + usuario + "','" + clave + "','" + nombre + "');";
            stmt.executeUpdate(sql);
            stmt.close();
            c.commit();
            c.close();
            DefaultTableModel modelo = (DefaultTableModel) tablaLicencias.getModel();
            for (int i = 0; i < tablaLicencias.getRowCount(); i++) {
                modelo.removeRow(i);
                i -= 1;
            }
            mostrarDatosTLicencias();
            JOptionPane.showMessageDialog(null, "La licencia se añadió correctamente");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se pudo hacer la inserción debido a que 1 o mas datos ya existen,"
                    + "\nasegúrese de que ingresó los datos correctamente");
        }

    }

    public static void añadirContacto(String nLicencia) {
        try {
            String nContacto = txtNombreContacto.getText();
            String movilContacto = txtMovilContacto.getText();
            String paisContacto = comboPais.getSelectedItem().toString();

            Connection c = null;
            Statement stmt = null;
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:jmensario.db");
            c.setAutoCommit(false);

            stmt = c.createStatement();
            String sql = "INSERT INTO contactos VALUES"
                    + " ('" + movilContacto + "','" + nContacto + "','" + paisContacto + "','" + nLicencia + "');";
            stmt.executeUpdate(sql);
            stmt.close();
            c.commit();
            c.close();
            DefaultTableModel modelo = (DefaultTableModel) tablaContactos.getModel();
            for (int i = 0; i < tablaContactos.getRowCount(); i++) {
                modelo.removeRow(i);
                i -= 1;
            }
            mostrarDatosTContactos(comboElegirGrupo.getSelectedItem().toString(), nLicencia);
            JOptionPane.showMessageDialog(null, "El contacto se añadió correctamente");
        } catch (Exception ex) {
            Logger.getLogger(Envios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public static int[] calcularLargoTelf(String nombrePais){
        int[]num=new int[5];
        switch (nombrePais) {
            case "Alemania":
                num=new int[5];
                num[0]=10;
                num[1]=11;
                num[2]=1;
                return num;
            case "Andorra":
                num=new int[5];
                num[0]=6;
                num[1]=6;
                num[2]=3;
                num[3]=4;
                num[4]=6;
                return num;
            case "Austria":
                num=new int[5];
                num[0]=10;
                num[1]=10;
                num[2]=6;
                return num;
            case "Bélgica":
                num=new int[5];
                num[0]=9;
                num[1]=9;
                num[2]=4;
                return num;
            case "Bosnia":
                num=new int[5];
                num[0]=8;
                num[1]=8;
                num[2]=6;
                return num;
            case "Bulgaria":
                num=new int[5];
                num[0]=8;
                num[1]=8;
                num[2]=87;
                return num;
            case "Chipre":
                num=new int[5];
                num[0]=8;
                num[1]=8;
                num[2]=99;
                return num;
            case "Croacia":
                num=new int[5];
                num[0]=9;
                num[1]=9;
                num[2]=9;
                return num;
            case "Dinamarca":
                num=new int[5];
                num[0]=8;
                num[1]=8;
                return num;
            case "Eslovaquia":
                num=new int[5];
                num[0]=9;
                num[1]=9;
                num[2]=9;
                return num;
            case "Eslovenia":
                num=new int[5];
                num[0]=8;
                num[1]=8;
                return num;
            case "España":
                num=new int[5];
                num[0]=9;
                num[1]=9;
                num[2]=6;
                num[3]=7;
                return num;
            case "Estonia":
                num=new int[5];
                num[0]=7;
                num[1]=8;
                num[2]=5;
                num[3]=8;
                return num;
            case "Finlandia":
                num=new int[5];
                num[0]=9;
                num[1]=9;
                num[2]=4;
                num[3]=50;
                return num;
            case "Francia":
                num=new int[5];
                num[0]=9;
                num[1]=9;
                num[2]=6;
                num[3]=7;
                return num;
            case "Grecia":
                num=new int[5];
                num[0]=10;
                num[1]=10;
                num[2]=6;
                return num;
            case "Hungría":
                num=new int[5];
                num[0]=9;
                num[1]=9;
                num[2]=20;
                num[3]=30;
                num[4]=70;
                return num;
            case "Irlanda":
                num=new int[5];
                num[0]=9;
                num[1]=9;
                num[2]=8;
                return num;
            case "Islandia":
                num=new int[5];
                num[0]=7;
                num[1]=7;
                return num;
            case "Italia":
                num=new int[5];
                num[0]=10;
                num[1]=10;
                num[2]=3;
                return num;
            case "Letonia":
                num=new int[5];
                num[0]=8;
                num[1]=8;
                num[2]=2;
                return num;
            case "Lituania":
                num=new int[5];
                num[0]=8;
                num[1]=8;
                num[2]=6;
                return num;
            case "Luxemburgo":
                num=new int[5];
                num[0]=9;
                num[1]=9;
                num[2]=6;
                return num;
            case "Malta":
                num=new int[5];
                num[0]=8;
                num[1]=8;
                num[2]=79;
                num[3]=99;
                return num;
            case "Montenegro":
                num=new int[5];
                num[0]=8;
                num[1]=8;
                num[2]=6;
                return num;
            case "Noruega":
                num=new int[5];
                num[0]=8;
                num[1]=8;
                num[2]=4;
                num[3]=9;
                return num;
            case "Países Bajos":
                num=new int[5];
                num[0]=9;
                num[1]=9;
                num[2]=6;
                return num;
            case "Polonia":
                num=new int[5];
                num[0]=9;
                num[1]=9;
                num[2]=5;
                num[3]=6;
                num[4]=7;
                return num;
            case "Portugal":
                num=new int[5];
                num[0]=9;
                num[1]=9;
                num[2]=9;
                return num;
            case "Reino Unido":
                num=new int[5];
                num[0]=10;
                num[1]=10;
                num[2]=7;
                return num;
            case "República Checa":
                num=new int[5];
                num[0]=9;
                num[1]=9;
                num[2]=6;
                num[3]=7;
                return num;
            case "Rumanía":
                num=new int[5];
                num[0]=9;
                num[1]=9;
                num[2]=7;
                return num;
            case "Rusia":
                num=new int[5];
                num[0]=10;
                num[1]=10;
                num[2]=9;
                return num;
            case "Serbia-Kosovo":
                num=new int[5];
                num[0]=8;
                num[1]=9;
                num[2]=6;
                return num;
            case "Suecia":
                num=new int[5];
                num[0]=9;
                num[1]=9;
                num[2]=7;
                return num;
            case "Suiza":
                num=new int[5];
                num[0]=9;
                num[1]=9;
                num[2]=7;
                return num;
            case "Turquía":
                num=new int[5];
                num[0]=10;
                num[1]=10;
                num[2]=5;
                return num;
            case "Ucrania":
                num=new int[5];
                num[0]=9;
                num[1]=9;
                return num;
        }
        return num;
    }

    public static String transformarPais(String nombrePais) {
        switch (nombrePais) {
            case "Alemania":
                return "49/";
            case "Andorra":
                return "376/";
            case "Austria":
                return "43/";
            case "Bélgica":
                return "32/";
            case "Bosnia":
                return "387/";
            case "Bulgaria":
                return "359/";
            case "Chipre":
                return "357/";
            case "Croacia":
                return "385/";
            case "Dinamarca":
                return "45/";
            case "Eslovaquia":
                return "421/";
            case "Eslovenia":
                return "386/";
            case "España":
                return "34/";
            case "Estonia":
                return "372/";
            case "Finlandia":
                return "352/";
            case "Francia":
                return "33/";
            case "Grecia":
                return "30/";
            case "Hungría":
                return "36/";
            case "Irlanda":
                return "353/";
            case "Islandia":
                return "354/";
            case "Italia":
                return "39/";
            case "Letonia":
                return "371/";
            case "Lituania":
                return "370/";
            case "Luxemburgo":
                return "32/";
            case "Malta":
                return "356/";
            case "Montenegro":
                return "382/";
            case "Noruega":
                return "47/";
            case "Países Bajos":
                return "31/";
            case "Polonia":
                return "48/";
            case "Portugal":
                return "351/";
            case "Reino Unido":
                return "44/";
            case "República Checa":
                return "420/";
            case "Rumanía":
                return "40/";
            case "Rusia":
                return "7/";
            case "Serbia-Kosovo":
                return "381/";
            case "Suecia":
                return "46/";
            case "Suiza":
                return "41/";
            case "Turquía":
                return "90/";
            case "Ucrania":
                return "380/";
        }
        return "";
    }

    public static void seleccionarLineaLicencias() {
        if (tablaLicencias.getSelectedRow() != -1) {
            txtLicencia.setText((String) tablaLicencias.getValueAt(tablaLicencias.getSelectedRow(), 0));
            txtUsuario.setText((String) tablaLicencias.getValueAt(tablaLicencias.getSelectedRow(), 1));
            txtClave.setText((String) tablaLicencias.getValueAt(tablaLicencias.getSelectedRow(), 2));
            txtNombre.setText((String) tablaLicencias.getValueAt(tablaLicencias.getSelectedRow(), 3));
        }
    }
    public static void seleccionarLineaContactos(){
        if (tablaContactos.getSelectedRow() != -1) {
            txtNombreContacto.setText((String) tablaContactos.getValueAt(tablaContactos.getSelectedRow(), 1));
            txtMovilContacto.setText((String) tablaContactos.getValueAt(tablaContactos.getSelectedRow(), 0));
            comboPais.setSelectedItem((String) tablaContactos.getValueAt(tablaContactos.getSelectedRow(), 2));
        }
    }

    public static void eliminarLicencia() {
        Connection c = null;
        Statement stmt = null;

        String licencia = txtLicencia.getText();
        if (!"".equals(licencia)) {
            try {
                Class.forName("org.sqlite.JDBC");
                c = DriverManager.getConnection("jdbc:sqlite:jmensario.db");
                c.setAutoCommit(false);

                stmt = c.createStatement();
                String sql = "DELETE from licencias where nlicencia='" + licencia + "';";
                stmt.executeUpdate(sql);
                c.commit();
                stmt.close();
                c.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "No existe esa licencia,compruebe si esta bien escrita");
            }
            DefaultTableModel modelo = (DefaultTableModel) tablaLicencias.getModel();
            modelo.removeRow(tablaLicencias.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(null, "Debes elegir una licencia a borrar");
        }
    }
    
    public static void eliminarContacto(){
        Connection c = null;
        Statement stmt = null;

        String movil = txtMovilContacto.getText();
        if (!"".equals(movil)) {
            try {
                Class.forName("org.sqlite.JDBC");
                c = DriverManager.getConnection("jdbc:sqlite:jmensario.db");
                c.setAutoCommit(false);

                stmt = c.createStatement();
                String sql = "DELETE from contactos where movilc='" + movil + "';";
                stmt.executeUpdate(sql);
                c.commit();
                stmt.close();
                c.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "No existe ese contacto,compruebe si esta bien escrito");
            }
            DefaultTableModel modelo = (DefaultTableModel) tablaContactos.getModel();
            modelo.removeRow(tablaContactos.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(null, "Debes elegir una movil a borrar");
        }
    }

    public static void limpiarTxt() {
        txtLicencia.setText("");
        txtUsuario.setText("");
        txtClave.setText("");
        txtNombre.setText("");
    }

    public static String cambiarCaracteres(String mensaje) {
        String aux = mensaje.replace("á", "à");
        aux = aux.replace("í", "ì");
        aux = aux.replace("ó", "ò");
        aux = aux.replace("ú", "ù");
        return aux;
    }

    public static boolean comprobarGSM(String mensaje) {
        char[] charArray = mensaje.toCharArray();
        for (int i = 0; i < charArray.length; i++) {
            if (alfabetoGSM.indexOf(charArray[i]) < 0) {
                return false;
            }
        }
        return true;
    }

    public static boolean comprobarRemitente(String remitente) {
        char[] charArray = remitente.toCharArray();
        for (int i = 0; i < charArray.length; i++) {
            if (alfabetoRemitente.indexOf(charArray[i]) < 0) {
                return false;
            }
        }
        return true;
    }
    public static String juntarMovilPrefijo(String movil){
        Connection c=null;
        Statement stmt=null;
        try {
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:jmensario.db");
            c.setAutoCommit(false);
            stmt=c.createStatement();
            
            String sql="SELECT * FROM contactos WHERE movilc='"+movil+"'";
            ResultSet rs=stmt.executeQuery(sql);
            if(rs.next()==true){
                String movilPref=transformarPais(rs.getString("paisc"))+rs.getString("movilc")+",";
                return movilPref;
            }else
                JOptionPane.showMessageDialog(null,"Este teléfono no se encuentra registrado agréguelo primero");
        } catch (Exception ex) {
            Logger.getLogger(Envios.class.getName()).log(Level.SEVERE, null, ex);
        }
        return "";
    }
    public static void borrarGrupo(){
        if(!"Todos".equals(comboElegirGrupo.getSelectedItem().toString())){
            Connection c=null;
            Statement stmt=null;
            try {
                Class.forName("org.sqlite.JDBC");
                c = DriverManager.getConnection("jdbc:sqlite:jmensario.db");
                c.setAutoCommit(false);
                stmt=c.createStatement();
                String sql="DELETE FROM grupos where nGrupo='"+comboElegirGrupo.getSelectedItem().toString()+"';";
                stmt.executeUpdate(sql);
                c.commit();
                sql="DROP TABLE "+adaptarNombreG(comboElegirGrupo.getSelectedItem().toString())+";";
                stmt.executeUpdate(sql);
                c.commit();
                stmt.close();
                c.close();

            } catch (Exception ex) {
                Logger.getLogger(CrearGrupo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(null,"El grupo \"Todos\" no se puede borrar");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Envios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Envios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Envios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Envios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Envios().setVisible(true);
                comprobarCheck();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JCheckBox CheckEnvioProgramado;
    private javax.swing.JInternalFrame IFContactos;
    private javax.swing.JInternalFrame IFDestinatario;
    private javax.swing.JInternalFrame IFMensaje;
    private javax.swing.JTabbedPane TPEscribirSms;
    private javax.swing.JButton btnAñadirAlGrupo;
    public static javax.swing.JButton btnAñadirContacto;
    private javax.swing.JButton btnAñadirLicencia;
    private javax.swing.JButton btnAñadirMovil;
    private javax.swing.JButton btnBorrarGrupo;
    private javax.swing.JButton btnBuscarLicencia;
    private javax.swing.JButton btnCrearGrupo;
    private javax.swing.JButton btnDesordenar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarContacto;
    private javax.swing.JButton btnEliminarMoviles;
    private javax.swing.JButton btnEliminarTexto;
    public static javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnEscribirContacto;
    private javax.swing.JButton btnEscribirGrupo;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnLimpiarMovilC;
    private javax.swing.JButton btnLimpiarNombreC;
    private javax.swing.JButton btnOrdenarMovilA;
    private javax.swing.JButton btnOrdenarMovilD;
    private javax.swing.JButton btnOrdenarNombreA;
    private javax.swing.JButton btnOrdenarNombreD;
    private javax.swing.JButton btnOrdenarPaisA;
    private javax.swing.JButton btnOrdenarPaisD;
    private javax.swing.JButton btnUtilizarLicencia;
    public static javax.swing.JComboBox<String> comboAñadirAlGrupo;
    public static javax.swing.JComboBox<String> comboElegirGrupo;
    public static javax.swing.JComboBox<String> comboHoraEnvio;
    public static javax.swing.JComboBox<String> comboMinEnvio;
    public static javax.swing.JComboBox<String> comboPais;
    public static javax.swing.JComboBox<String> comboSegEnvio;
    public static com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JScrollPane jScrollPaneMoviles;
    private javax.swing.JScrollPane jScrollPaneTexto;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lblClave;
    private javax.swing.JLabel lblHoraEnvio;
    private javax.swing.JLabel lblLicencia;
    private javax.swing.JLabel lblMovil;
    private javax.swing.JLabel lblMoviles;
    public static javax.swing.JLabel lblMovilesInsertados;
    private javax.swing.JLabel lblMovilesInsertadosName;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNombreContacto;
    private javax.swing.JLabel lblNombreRemitente;
    private javax.swing.JLabel lblNombreTabla;
    public static javax.swing.JLabel lblNombreUsr;
    public static javax.swing.JLabel lblNumCaracteres;
    private javax.swing.JLabel lblNumCaracteresName;
    public static javax.swing.JLabel lblNumMensajes;
    private javax.swing.JLabel lblNumMensajesName;
    private javax.swing.JLabel lblPais;
    public static javax.swing.JLabel lblSaldo;
    private javax.swing.JLabel lblSaldoName;
    private javax.swing.JLabel lblTexto;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JPanel panelContactos;
    private javax.swing.JPanel panelEnvios;
    private javax.swing.JPanel panelLicencias;
    private javax.swing.JScrollPane scrollContactos;
    private javax.swing.JScrollPane scrollTable;
    public static javax.swing.JTable tablaContactos;
    public static javax.swing.JTable tablaLicencias;
    public static javax.swing.JTextArea txtAreaMensaje;
    public static javax.swing.JTextArea txtAreaMoviles;
    public static javax.swing.JTextField txtClave;
    public static javax.swing.JTextField txtLicencia;
    public static javax.swing.JTextField txtMovilContacto;
    public static javax.swing.JTextField txtNombre;
    public static javax.swing.JTextField txtNombreContacto;
    private javax.swing.JTextField txtNombreRemitente;
    public static javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
