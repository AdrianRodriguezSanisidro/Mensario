/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simulacion_mensario;

import com.sun.glass.events.KeyEvent;
import es.xilon.semApi.*;
import es.xilon.semApi.beans.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author adrys
 */
public class Envios extends javax.swing.JFrame {

    public static ApiResponseBean apiResponse = null;
    public static ApiResponseBean apiResponseSaldo = null;
    public static SemApi semApi;

    /**
     * Creates new form Envios
     */
    public Envios() {
        initComponents();
        this.setLocationRelativeTo(null);//Centrar ventana
        //Inicio del hilo
        Hilo objHilo = new Hilo();
        objHilo.start();
        mostrarDatosT();
        TPEscribirSms.setIconAt(0, new ImageIcon(""));
        //Quitar autoscroll horizontal
        txtAreaMensaje.setLineWrap(true);
        txtAreaMensaje.setWrapStyleWord(true);
        txtAreaMoviles.setLineWrap(true);
        txtAreaMoviles.setWrapStyleWord(true);
        semApi = new SemApi("LSTD04182162B5196645", "ipbu7578", "mnuisul7", "es.servicios.mensario.com", 443);
        semApi.setTimezone("Europe/Madrid");
        lblNombreUsr.setText("LSTD04182162B5196645");
        refrescarSaldo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TPEscribirSms = new javax.swing.JTabbedPane();
        panelEnvios = new javax.swing.JPanel();
        lblNombreUsr = new javax.swing.JLabel();
        lblNombreRemitente = new javax.swing.JLabel();
        lblSaldoName = new javax.swing.JLabel();
        lblSaldo = new javax.swing.JLabel();
        txtNombreRemitente = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        IFDestinatario = new javax.swing.JInternalFrame();
        lblMoviles = new javax.swing.JLabel();
        jScrollPaneMoviles = new javax.swing.JScrollPane();
        txtAreaMoviles = new javax.swing.JTextArea();
        lblMovilesInsertadosName = new javax.swing.JLabel();
        btnAñadirMovil = new javax.swing.JButton();
        btnEliminarMoviles = new javax.swing.JButton();
        lblMovilesInsertados = new javax.swing.JLabel();
        IFMensaje = new javax.swing.JInternalFrame();
        lblTexto = new javax.swing.JLabel();
        jScrollPaneTexto = new javax.swing.JScrollPane();
        txtAreaMensaje = new javax.swing.JTextArea();
        lblNumMensajesName = new javax.swing.JLabel();
        lblNumCaracteresName = new javax.swing.JLabel();
        btnEliminarTexto = new javax.swing.JButton();
        lblNumMensajes = new javax.swing.JLabel();
        lblNumCaracteres = new javax.swing.JLabel();
        CheckEnvioProgramado = new javax.swing.JCheckBox();
        lblHoraEnvio = new javax.swing.JLabel();
        btnEnviar = new javax.swing.JButton();
        comboHoraEnvio = new javax.swing.JComboBox<>();
        comboMinEnvio = new javax.swing.JComboBox<>();
        comboSegEnvio = new javax.swing.JComboBox<>();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        panelLicencias = new javax.swing.JPanel();
        scrollTable = new javax.swing.JScrollPane();
        tablaLicencias = new javax.swing.JTable();
        lblLicencia = new javax.swing.JLabel();
        txtLicencia = new javax.swing.JTextField();
        lblUsuario = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblClave = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        btnAñadirLicencia = new javax.swing.JButton();
        btnBuscarLicencia = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnUtilizarLicencia = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mensario 2");
        setBackground(new java.awt.Color(255, 255, 255));
        setSize(new java.awt.Dimension(600, 720));

        TPEscribirSms.setBackground(new java.awt.Color(255, 255, 255));
        TPEscribirSms.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TPEscribirSms.setOpaque(true);

        lblNombreUsr.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNombreUsr.setText("NombreUsr(KFSJS123FKSL5LG32)");
        lblNombreUsr.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Esta utilizando la licencia:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 11))); // NOI18N

        lblNombreRemitente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNombreRemitente.setText("Nombre de remitente:");

        lblSaldoName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblSaldoName.setText("Saldo disponible:");

        txtNombreRemitente.setToolTipText("");

        IFDestinatario.setTitle("Destianatario");
        IFDestinatario.setVisible(true);

        lblMoviles.setText("Móviles:");

        txtAreaMoviles.setColumns(20);
        txtAreaMoviles.setRows(5);
        jScrollPaneMoviles.setViewportView(txtAreaMoviles);

        lblMovilesInsertadosName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblMovilesInsertadosName.setText("Número de moviles insertados:");

        btnAñadirMovil.setText("Añadir movil");
        btnAñadirMovil.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAñadirMovil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAñadirMovilMouseClicked(evt);
            }
        });

        btnEliminarMoviles.setText("Limpiar texto");
        btnEliminarMoviles.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminarMoviles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMovilesMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout IFDestinatarioLayout = new javax.swing.GroupLayout(IFDestinatario.getContentPane());
        IFDestinatario.getContentPane().setLayout(IFDestinatarioLayout);
        IFDestinatarioLayout.setHorizontalGroup(
            IFDestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IFDestinatarioLayout.createSequentialGroup()
                .addGroup(IFDestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(IFDestinatarioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblMovilesInsertadosName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblMovilesInsertados, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAñadirMovil, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(btnEliminarMoviles, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPaneMoviles))
                .addContainerGap())
            .addGroup(IFDestinatarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMoviles)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        IFDestinatarioLayout.setVerticalGroup(
            IFDestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IFDestinatarioLayout.createSequentialGroup()
                .addComponent(lblMoviles)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneMoviles, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(IFDestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMovilesInsertadosName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMovilesInsertados, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(IFDestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAñadirMovil)
                        .addComponent(btnEliminarMoviles)))
                .addGap(5, 5, 5))
        );

        IFMensaje.setTitle("Mensaje");
        IFMensaje.setVisible(true);

        lblTexto.setText("Texto:");

        txtAreaMensaje.setColumns(20);
        txtAreaMensaje.setRows(5);
        jScrollPaneTexto.setViewportView(txtAreaMensaje);

        lblNumMensajesName.setText("Número de mensajes:");

        lblNumCaracteresName.setText("Número de caracteres: ");

        btnEliminarTexto.setText("Limpiar texto");
        btnEliminarTexto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminarTexto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarTextoMouseClicked(evt);
            }
        });

        lblNumMensajes.setText("1");

        javax.swing.GroupLayout IFMensajeLayout = new javax.swing.GroupLayout(IFMensaje.getContentPane());
        IFMensaje.getContentPane().setLayout(IFMensajeLayout);
        IFMensajeLayout.setHorizontalGroup(
            IFMensajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneTexto)
            .addGroup(IFMensajeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(IFMensajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(IFMensajeLayout.createSequentialGroup()
                        .addComponent(lblNumMensajesName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNumMensajes, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblNumCaracteresName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblNumCaracteres, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminarTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(IFMensajeLayout.createSequentialGroup()
                        .addComponent(lblTexto)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        IFMensajeLayout.setVerticalGroup(
            IFMensajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IFMensajeLayout.createSequentialGroup()
                .addComponent(lblTexto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(IFMensajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblNumMensajes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblNumCaracteres, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(IFMensajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNumMensajesName)
                        .addComponent(lblNumCaracteresName)
                        .addComponent(btnEliminarTexto)))
                .addGap(5, 5, 5))
        );

        CheckEnvioProgramado.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        CheckEnvioProgramado.setText("Envio programado");

        lblHoraEnvio.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblHoraEnvio.setText("Hora de envio:");

        btnEnviar.setText("Enviar");
        btnEnviar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEnviar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEnviarMouseClicked(evt);
            }
        });

        comboHoraEnvio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        comboMinEnvio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        comboSegEnvio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        jCalendar1.setDecorationBordersVisible(true);

        javax.swing.GroupLayout panelEnviosLayout = new javax.swing.GroupLayout(panelEnvios);
        panelEnvios.setLayout(panelEnviosLayout);
        panelEnviosLayout.setHorizontalGroup(
            panelEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblNombreUsr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addGroup(panelEnviosLayout.createSequentialGroup()
                .addComponent(lblNombreRemitente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombreRemitente, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblSaldoName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEnviosLayout.createSequentialGroup()
                .addComponent(IFDestinatario)
                .addGap(0, 0, 0))
            .addGroup(panelEnviosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CheckEnvioProgramado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblHoraEnvio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(comboHoraEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboMinEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboSegEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(panelEnviosLayout.createSequentialGroup()
                .addComponent(IFMensaje)
                .addGap(0, 0, 0))
        );
        panelEnviosLayout.setVerticalGroup(
            panelEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEnviosLayout.createSequentialGroup()
                .addComponent(lblNombreUsr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEnviosLayout.createSequentialGroup()
                        .addGroup(panelEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNombreRemitente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombreRemitente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSaldoName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(2, 2, 2))
                    .addComponent(lblSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(IFDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IFMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panelEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEnviosLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(panelEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEnviar)
                            .addComponent(comboSegEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboMinEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboHoraEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHoraEnvio))
                        .addGap(40, 40, 40))
                    .addGroup(panelEnviosLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(CheckEnvioProgramado))
                    .addGroup(panelEnviosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );

        TPEscribirSms.addTab("Envios", panelEnvios);

        tablaLicencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número de serie", "Usuario", "Clave", "Nombre"
            }
        ));
        scrollTable.setViewportView(tablaLicencias);

        lblLicencia.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblLicencia.setText("Licencia:");

        lblUsuario.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblUsuario.setText("Usuario:");

        lblNombre.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNombre.setText("Nombre:");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        lblClave.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblClave.setText("Clave:");

        btnAñadirLicencia.setText("Añadir licencia");
        btnAñadirLicencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAñadirLicenciaMouseClicked(evt);
            }
        });

        btnBuscarLicencia.setText("Buscar");

        btnLimpiar.setText("Limpiar campos");

        btnUtilizarLicencia.setText("Utilizar licencia");
        btnUtilizarLicencia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        btnEliminar.setText("Eliminar licencia");

        javax.swing.GroupLayout panelLicenciasLayout = new javax.swing.GroupLayout(panelLicencias);
        panelLicencias.setLayout(panelLicenciasLayout);
        panelLicenciasLayout.setHorizontalGroup(
            panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLicenciasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollTable)
                    .addGroup(panelLicenciasLayout.createSequentialGroup()
                        .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLicenciasLayout.createSequentialGroup()
                                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtLicencia)
                                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(89, 89, 89)
                                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblClave, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtClave)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelLicenciasLayout.createSequentialGroup()
                                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnUtilizarLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAñadirLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnBuscarLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(104, 104, 104)))))
                .addContainerGap())
        );
        panelLicenciasLayout.setVerticalGroup(
            panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLicenciasLayout.createSequentialGroup()
                .addComponent(scrollTable, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLicenciasLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblClave, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUtilizarLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(panelLicenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAñadirLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        TPEscribirSms.addTab("Licencias", panelLicencias);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TPEscribirSms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TPEscribirSms, javax.swing.GroupLayout.PREFERRED_SIZE, 794, Short.MAX_VALUE)
                .addContainerGap())
        );

        TPEscribirSms.getAccessibleContext().setAccessibleName("Envios");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarMovilesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMovilesMouseClicked
        txtAreaMoviles.setText("");
    }//GEN-LAST:event_btnEliminarMovilesMouseClicked

    private void btnEliminarTextoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarTextoMouseClicked
        txtAreaMensaje.setText("");
    }//GEN-LAST:event_btnEliminarTextoMouseClicked

    private void btnAñadirMovilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAñadirMovilMouseClicked
        txtAreaMoviles.setText("678111234," + txtAreaMoviles.getText());
    }//GEN-LAST:event_btnAñadirMovilMouseClicked

    private void btnEnviarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEnviarMouseClicked
        try {
            String[] contador = txtAreaMoviles.getText().split(",");
            //Set recipients
            ArrayList<ApiRecipientBean> recipients = new ArrayList<ApiRecipientBean>();
            for (int i = 0; i < Integer.parseInt(Hilo.comprobarTelefonos()); i++) {
                ApiRecipientBean recipient = new ApiRecipientBean();
                recipient.setCode("34");
                recipient.setPhone(contador[i]);
                recipients.add(recipient);
            }
            //Set message data
            ArrayList<ApiMessageBean> sendings = new ArrayList<ApiMessageBean>();
            ApiMessageBean message = new ApiMessageBean();
            message.setRecipients(recipients);
            message.setSender(txtNombreRemitente.getText());
            message.setText(txtAreaMensaje.getText());
            message.setDate(conseguirFecha());
            sendings.add(message);

            apiResponse = semApi.executeSending(sendings);
            refrescarSaldo();
            if (apiResponse.getResult().equals("OK")) {

                JOptionPane.showMessageDialog(this, "Id de petición: " + apiResponse.getRequest() + "\n" + "Id de mensaje: " + apiResponse.getIds().get(0), "Envío", JOptionPane.INFORMATION_MESSAGE);
            } else {
                System.err.println(apiResponse.getResult());
            }
        } catch (Exception ex) {
            Logger.getLogger(Envios.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnEnviarMouseClicked

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnAñadirLicenciaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAñadirLicenciaMouseClicked
        añadirT();
    }//GEN-LAST:event_btnAñadirLicenciaMouseClicked
    /*
    *
    *
    *Inicio de metodos para el programa
    *
    *
    */
    public String conseguirFecha() {
        String fechaDefinitiva = "";
        if (CheckEnvioProgramado.isSelected() == true) {
            String fechaString = "" + jCalendar1.getDate();
            System.out.println("----------" + fechaString + "----------");
            String[] fecha = fechaString.split(" ");
            fecha[1] = convertirMes(fecha[1]);
            fechaDefinitiva = (fecha[5] + fecha[1] + fecha[2]
                    + comboHoraEnvio.getItemAt(comboHoraEnvio.getSelectedIndex())
                    + comboMinEnvio.getItemAt(comboMinEnvio.getSelectedIndex())
                    + comboSegEnvio.getItemAt(comboSegEnvio.getSelectedIndex()));
        } else {
            fechaDefinitiva = "00000000000000";
        }
        return fechaDefinitiva;
    }

    public String convertirMes(String fecha1) {
        String mesAux = fecha1;
        switch (mesAux) {
            case "Jan":
                fecha1 = "01";
                break;
            case "Feb":
                fecha1 = "02";
                break;
            case "Mar":
                fecha1 = "03";
                break;
            case "Apr":
                fecha1 = "04";
                break;
            case "May":
                fecha1 = "05";
                break;
            case "Jun":
                fecha1 = "06";
                break;
            case "Jul":
                fecha1 = "07";
                break;
            case "Aug":
                fecha1 = "08";
                break;
            case "Sep":
                fecha1 = "09";
                break;
            case "Oct":
                fecha1 = "10";
                break;
            case "Nov":
                fecha1 = "11";
                break;
            case "Dec":
                fecha1 = "12";
                break;
        }
        return fecha1;
    }

    public static void comprobarCheck() {
        if (CheckEnvioProgramado.isSelected() == false) {
            comboHoraEnvio.setEnabled(false);
            comboMinEnvio.setEnabled(false);
            comboSegEnvio.setEnabled(false);
            jCalendar1.setEnabled(false);
        } else {
            comboHoraEnvio.setEnabled(true);
            comboMinEnvio.setEnabled(true);
            comboSegEnvio.setEnabled(true);
            jCalendar1.setEnabled(true);
        }
    }
        public void refrescarSaldo(){
        try {
            apiResponseSaldo=semApi.executeBalanceEnquiry();
            lblSaldo.setText(""+apiResponseSaldo.getQuantity());
        } catch (Exception ex) {
            Logger.getLogger(Hilo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        public void crearTabla(){
        try {
            Connection c = null;
            Statement stmt = null;
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:jmensario.db");
            stmt = c.createStatement();
            String sql = "CREATE TABLE licencias "
                    + "(nlicencia TEXT PRIMARY KEY NOT NULL,"
                    + "usuario TEXT UNIQUE NOT NULL,"
                    + "clave TEXT UNIQUE NOT NULL, "
                    + "nombre TEXT UNIQUE NOT NULL)";
            stmt.executeUpdate(sql);
            stmt.close();
            c.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Envios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Envios.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
        public static void mostrarDatosT(){
         Connection c = null;
         Statement stmt = null;
         DefaultTableModel modelo=(DefaultTableModel) tablaLicencias.getModel();
         try {
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:jmensario.db");
            c.setAutoCommit(false);
            
            stmt = c.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM licencias;");
            while(rs.next()){
                Object[] linea=new Object[5];
                linea[0]=rs.getString("nlicencia");
                linea[1]=rs.getString("usuario");
                linea[2]=rs.getString("clave");
                linea[3]=rs.getString("nombre");
                modelo.addRow(linea);
                tablaLicencias.setModel(modelo);
            }
            rs.close();
            stmt.close();
            c.close();
    }catch (Exception e) {
            System.err.println(e.getClass().getName() + ": " + e.getMessage());
            System.exit(0);
        }
}
        public static void añadirT(){
        String nlicencia =txtLicencia.getText();
        String usuario =txtUsuario.getText();
        String clave =txtClave.getText();
        String nombre =txtNombre.getText();
        

        Connection c = null;
        Statement stmt = null;
        try {
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:jmensario.db");
            System.out.println("Conexion realizada");
            c.setAutoCommit(false);

            stmt = c.createStatement();
            String sql = "INSERT INTO licencias VALUES (" + "'" + nlicencia + "'," + "'" + usuario + "','" + clave + "','" + nombre  + "');";
            stmt.executeUpdate(sql);
            stmt.close();
            c.commit();
            c.close();
        } catch (Exception e) {
            System.err.println(e.getClass().getName() + ": " + e.getMessage());
            System.exit(0);
        }
        DefaultTableModel modelo=(DefaultTableModel) tablaLicencias.getModel();
         for (int i = 0; i < tablaLicencias.getRowCount(); i++) {
           modelo.removeRow(i);
           i-=1;
       }
        mostrarDatosT();
        System.out.println("Insercion realizada con exito");
    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Envios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Envios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Envios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Envios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Envios().setVisible(true);
                comprobarCheck();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JCheckBox CheckEnvioProgramado;
    private javax.swing.JInternalFrame IFDestinatario;
    private javax.swing.JInternalFrame IFMensaje;
    private javax.swing.JTabbedPane TPEscribirSms;
    private javax.swing.JButton btnAñadirLicencia;
    private javax.swing.JButton btnAñadirMovil;
    private javax.swing.JButton btnBuscarLicencia;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarMoviles;
    private javax.swing.JButton btnEliminarTexto;
    public static javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnUtilizarLicencia;
    public static javax.swing.JComboBox<String> comboHoraEnvio;
    public static javax.swing.JComboBox<String> comboMinEnvio;
    public static javax.swing.JComboBox<String> comboSegEnvio;
    public static com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JScrollPane jScrollPaneMoviles;
    private javax.swing.JScrollPane jScrollPaneTexto;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblClave;
    private javax.swing.JLabel lblHoraEnvio;
    private javax.swing.JLabel lblLicencia;
    private javax.swing.JLabel lblMoviles;
    public static javax.swing.JLabel lblMovilesInsertados;
    private javax.swing.JLabel lblMovilesInsertadosName;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNombreRemitente;
    private javax.swing.JLabel lblNombreUsr;
    public static javax.swing.JLabel lblNumCaracteres;
    private javax.swing.JLabel lblNumCaracteresName;
    public static javax.swing.JLabel lblNumMensajes;
    private javax.swing.JLabel lblNumMensajesName;
    public static javax.swing.JLabel lblSaldo;
    private javax.swing.JLabel lblSaldoName;
    private javax.swing.JLabel lblTexto;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JPanel panelEnvios;
    private javax.swing.JPanel panelLicencias;
    private javax.swing.JScrollPane scrollTable;
    public static javax.swing.JTable tablaLicencias;
    public static javax.swing.JTextArea txtAreaMensaje;
    public static javax.swing.JTextArea txtAreaMoviles;
    public static javax.swing.JTextField txtClave;
    public static javax.swing.JTextField txtLicencia;
    public static javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreRemitente;
    public static javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
