/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simulacion_mensario;

import com.sun.glass.events.KeyEvent;
import static java.awt.event.KeyEvent.VK_SPACE;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static simulacion_mensario.CrearGrupo.empiezaPorLetra;
import static simulacion_mensario.Envios.*;

/**
 *
 * @author adrys
 */
public class Plantilla extends javax.swing.JFrame {

    public static int eleccion;
    public static String nombreP;
    public static String textoP;
    public static boolean auxBorrado = false;

    /**
     * Creates new form Plantilla
     *
     * @param eleccion
     * @param nombreP
     * @param textoP
     */
    public Plantilla(int eleccion, String nombreP, String textoP) {
        initComponents();
        Plantilla.eleccion = eleccion;
        Plantilla.nombreP = nombreP;
        Plantilla.textoP = textoP;
        txtNombrePlantilla.setText(nombreP);
        txtAreaEscribirTextoPlantilla.setText(textoP);
        txtAreaEscribirTextoPlantilla.setLineWrap(true);
        txtAreaEscribirTextoPlantilla.setWrapStyleWord(true);
        Envios.mostrarVariablesCombo(comboVariablesPlantilla);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelEscribirPlanilla = new javax.swing.JPanel();
        lblNombrePlantilla = new javax.swing.JLabel();
        txtNombrePlantilla = new javax.swing.JTextField();
        jScrollPaneEscribirTextoPlantilla = new javax.swing.JScrollPane();
        txtAreaEscribirTextoPlantilla = new javax.swing.JTextArea();
        btnAceptarPlantilla = new javax.swing.JButton();
        btnLimpiarTextoPlantilla = new javax.swing.JButton();
        btnLimpiarNombrePlantilla = new javax.swing.JButton();
        comboVariablesPlantilla = new javax.swing.JComboBox<>();
        btnAddVariablePlantilla = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelEscribirPlanilla.setBackground(new java.awt.Color(153, 153, 153));

        lblNombrePlantilla.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNombrePlantilla.setText("Nombre de la plantilla:");

        txtNombrePlantilla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombrePlantillaKeyTyped(evt);
            }
        });

        jScrollPaneEscribirTextoPlantilla.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 153, 255), new java.awt.Color(0, 153, 153)), "Texto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jScrollPaneEscribirTextoPlantilla.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txtAreaEscribirTextoPlantilla.setColumns(20);
        txtAreaEscribirTextoPlantilla.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        txtAreaEscribirTextoPlantilla.setRows(5);
        jScrollPaneEscribirTextoPlantilla.setViewportView(txtAreaEscribirTextoPlantilla);

        btnAceptarPlantilla.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_check.jpg")); // NOI18N
        btnAceptarPlantilla.setText("Aceptar");
        btnAceptarPlantilla.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAceptarPlantilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAceptarPlantillaMouseClicked(evt);
            }
        });

        btnLimpiarTextoPlantilla.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_limpiar.jpg")); // NOI18N
        btnLimpiarTextoPlantilla.setText("Limpiar");
        btnLimpiarTextoPlantilla.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiarTextoPlantilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarTextoPlantillaMouseClicked(evt);
            }
        });

        btnLimpiarNombrePlantilla.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_limpiar.jpg")); // NOI18N
        btnLimpiarNombrePlantilla.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiarNombrePlantilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarNombrePlantillaMouseClicked(evt);
            }
        });

        comboVariablesPlantilla.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "{#Nombre}", "{#País}", "{#Remitente}", "{#Teléfono}" }));

        btnAddVariablePlantilla.setIcon(new javax.swing.ImageIcon("C:\\Users\\adrys\\Documents\\NetBeansProjects\\Simulacion_Mensario\\iconos\\rsz_plus.jpg")); // NOI18N
        btnAddVariablePlantilla.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddVariablePlantilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddVariablePlantillaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelEscribirPlanillaLayout = new javax.swing.GroupLayout(panelEscribirPlanilla);
        panelEscribirPlanilla.setLayout(panelEscribirPlanillaLayout);
        panelEscribirPlanillaLayout.setHorizontalGroup(
            panelEscribirPlanillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEscribirPlanillaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEscribirPlanillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneEscribirTextoPlantilla)
                    .addGroup(panelEscribirPlanillaLayout.createSequentialGroup()
                        .addComponent(lblNombrePlantilla, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombrePlantilla, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimpiarNombrePlantilla, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelEscribirPlanillaLayout.createSequentialGroup()
                        .addComponent(btnAceptarPlantilla, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(comboVariablesPlantilla, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddVariablePlantilla, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                        .addComponent(btnLimpiarTextoPlantilla, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelEscribirPlanillaLayout.setVerticalGroup(
            panelEscribirPlanillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEscribirPlanillaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEscribirPlanillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLimpiarNombrePlantilla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelEscribirPlanillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNombrePlantilla)
                        .addComponent(txtNombrePlantilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneEscribirTextoPlantilla, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(panelEscribirPlanillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEscribirPlanillaLayout.createSequentialGroup()
                        .addGroup(panelEscribirPlanillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAceptarPlantilla, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLimpiarTextoPlantilla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEscribirPlanillaLayout.createSequentialGroup()
                        .addGroup(panelEscribirPlanillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnAddVariablePlantilla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboVariablesPlantilla, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelEscribirPlanilla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelEscribirPlanilla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombrePlantillaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombrePlantillaKeyTyped
        char c = evt.getKeyChar();

        if (!(Character.isAlphabetic(c) || Character.isDigit(c) || c == KeyEvent.VK_DELETE) || txtNombrePlantilla.getText().length() >= 64) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNombrePlantillaKeyTyped

    private void btnLimpiarTextoPlantillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarTextoPlantillaMouseClicked
        txtAreaEscribirTextoPlantilla.setText("");
    }//GEN-LAST:event_btnLimpiarTextoPlantillaMouseClicked

    private void btnLimpiarNombrePlantillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarNombrePlantillaMouseClicked
        txtNombrePlantilla.setText("");
    }//GEN-LAST:event_btnLimpiarNombrePlantillaMouseClicked

    private void btnAceptarPlantillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAceptarPlantillaMouseClicked
        nuevaPlantilla();
        this.dispose();
    }//GEN-LAST:event_btnAceptarPlantillaMouseClicked

    private void btnAddVariablePlantillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddVariablePlantillaMouseClicked
        txtAreaEscribirTextoPlantilla.insert(comboVariablesPlantilla.getSelectedItem().toString(), txtAreaEscribirTextoPlantilla.getCaretPosition());
    }//GEN-LAST:event_btnAddVariablePlantillaMouseClicked

    public static void nuevaPlantilla() {
        if (!"".equals(txtNombrePlantilla.getText())) {
            if(empiezaPorLetra(txtAreaPlantilla.getText())==true){
                if (eleccion == 0) {
                    try {
                        conectar();
                        String sql = "INSERT INTO plantillas VALUES('" + txtNombrePlantilla.getText() + "','" + txtAreaEscribirTextoPlantilla.getText() + "','" + Envios.lblNombreUsr.getText() + "');";
                        stmt.executeUpdate(sql);
                        c.commit();
                        desconectar();
                        mostrarTablaPlantillas();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Ya existe una plantilla con ese nombre", "¡ATENCIÓN!", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    try {
                        conectar();
                        String sql = "INSERT INTO plantillas VALUES('" + txtNombrePlantilla.getText() + "','" + txtAreaEscribirTextoPlantilla.getText() + "','" + Envios.lblNombreUsr.getText() + "');";
                        borrarPlantilla(nombreP);
                        if (auxBorrado == true) {
                            stmt.executeUpdate(sql);
                            auxBorrado = false;
                        }
                        c.commit();
                        desconectar();
                        mostrarTablaPlantillas();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Ya existe una plantilla con ese nombre", "¡ATENCIÓN!", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }else{
                JOptionPane.showMessageDialog(null, "El nombre no puede empezar por una letra", "¡ATENCIÓN!", JOptionPane.ERROR_MESSAGE);  
            }
        } else {
            JOptionPane.showMessageDialog(null, "El nombre no puede estar en blanco", "¡ATENCIÓN!", JOptionPane.ERROR_MESSAGE);
        }
    }

    public static void borrarPlantilla(String plantilla) {
        try {
            conectar();
            String sql = "DELETE FROM plantillas WHERE nPlantilla='" + plantilla + "';";
            stmt.executeUpdate(sql);
            auxBorrado = true;
            c.commit();
            desconectar();
        } catch (SQLException ex) {
            Logger.getLogger(Plantilla.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static void crearTablaPlantillas() {
        try {
            conectar();
            String sql = "CREATE TABLE IF NOT EXISTS plantillas "
                    + "(nPlantilla TEXT PRIMARY KEY NOT NULL,"
                    + "tPlantilla TEXT);";
            stmt.executeUpdate(sql);
            c.commit();
            desconectar();
        } catch (SQLException ex) {
            System.err.println("ERROR EN CREAR TABLA PLANTILLAS");
            Logger.getLogger(Envios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public static void dropPlantilla(){
        try {
            conectar();
            String sql="DROP TABLE IF EXISTS plantillas;";
            stmt.executeUpdate(sql);
            c.commit();
            desconectar();
        } catch (SQLException ex) {
            Logger.getLogger(Plantilla.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static void mostrarTablaPlantillas() {
            try {
                DefaultTableModel modelo = (DefaultTableModel) tablaPlantillas.getModel();
                for (int i = 0; i < tablaPlantillas.getRowCount(); i++) {
                    modelo.removeRow(i);
                    i -= 1;
                }
                conectar();
                String sql = "SELECT * FROM plantillas ORDER BY nPlantilla;";
                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    Object[] linea = new Object[2];
                    linea[0] = rs.getString("nPlantilla");
                    linea[1] = rs.getString("tPlantilla");
                    modelo.addRow(linea);
                }
                tablaPlantillas.setModel(modelo);
                desconectar();

            } catch (SQLException ex) {
                System.err.println("ERROR EN MOSTRAR DATOS T CONTACTOS");
                Logger.getLogger(Envios.class.getName()).log(Level.SEVERE, null, ex);
                System.exit(0);
            }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Plantilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Plantilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Plantilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Plantilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Plantilla(eleccion, nombreP, textoP).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptarPlantilla;
    private javax.swing.JButton btnAddVariablePlantilla;
    private javax.swing.JButton btnLimpiarNombrePlantilla;
    private javax.swing.JButton btnLimpiarTextoPlantilla;
    public static javax.swing.JComboBox<String> comboVariablesPlantilla;
    private javax.swing.JScrollPane jScrollPaneEscribirTextoPlantilla;
    private javax.swing.JLabel lblNombrePlantilla;
    private javax.swing.JPanel panelEscribirPlanilla;
    public static javax.swing.JTextArea txtAreaEscribirTextoPlantilla;
    public static javax.swing.JTextField txtNombrePlantilla;
    // End of variables declaration//GEN-END:variables
}
